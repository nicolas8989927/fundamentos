<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="agenda.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2227"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Clientes" custom_title="0" dock_id="1" table="4,8:mainClientes"/><dock_state state="000000ff00000000fd00000001000000020000033b00000226fc0100000001fb000000160064006f0063006b00420072006f007700730065003101000000000000033b0000011800ffffff000002580000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Clientes" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="0" mode="1"/></sort><column_widths><column index="1" value="63"/><column index="2" value="51"/><column index="3" value="44"/><column index="4" value="54"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">DROP  TABLE IF EXISTS Clientes;
CREATE TABLE Clientes (
    id_cliente INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    correo TEXT UNIQUE NOT NULL,
    telefono TEXT NOT NULL
);
DROP TABLE IF EXISTS productos;
CREATE TABLE Productos (
    id_producto INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    precio REAL NOT NULL CHECK (precio &gt;= 0),
    stock INTEGER NOT NULL CHECK (stock &gt;= 0)
);
DROP TABLE IF EXISTS pedidos;
CREATE TABLE Pedidos (
    id_pedido INTEGER PRIMARY KEY AUTOINCREMENT,
    id_cliente INTEGER NOT NULL,
    fecha TEXT DEFAULT (datetime('now', 'localtime')),
    total REAL NOT NULL CHECK (total &gt;= 0),
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente)
);
DROP TABLE IF EXISTS Detalles_Pedido;
CREATE TABLE Detalles_Pedido (
    
	id_detalle INTEGER PRIMARY KEY AUTOINCREMENT,
    id_pedido INTEGER NOT NULL,
    id_producto INTEGER NOT NULL,
    cantidad INTEGER NOT NULL CHECK (cantidad &gt; 0),
    subtotal REAL NOT NULL CHECK (subtotal &gt;= 0),
    FOREIGN KEY (id_pedido) REFERENCES Pedidos(id_pedido),
    FOREIGN KEY (id_producto) REFERENCES Productos(id_producto)
);


-- Insertar clientes
INSERT INTO Clientes (nombre, correo, telefono) VALUES
('Juan Pérez', 'juan@example.com', '123456789'),
('María López', 'maria@example.com', '987654321');

-- Insertar productos
INSERT INTO Productos (nombre, precio, stock) VALUES
('Laptop', 1200.50, 10),
('Teléfono', 800.99, 15),
('Tablet', 450.75, 20);

-- Registrar un pedido
INSERT INTO Pedidos (id_cliente, total) VALUES (1, 2051.49);

-- Obtener el ID del pedido recién creado
SELECT last_insert_rowid(); -- Suponiendo que devuelve 1

-- Relacionar el pedido con productos en Detalles_Pedido
INSERT INTO Detalles_Pedido (id_pedido, id_producto, cantidad, subtotal) VALUES
(1, 1, 1, 1200.50), -- 1 Laptop
(1, 2, 1, 800.99),  -- 1 Teléfono
(1, 3, 1, 450.75);  -- 1 Tablet
</sql><current_tab id="0"/></tab_sql></sqlb_project>
